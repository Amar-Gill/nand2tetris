// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    Or(a=inc, b=reset, out=incorreset);

    Or(a=incorreset, b=load, out=superload);

    Mux16(a=incout, b=in, sel=load, out=t1);

    Mux16(a=in, b=t1, sel=inc, out=t2);

    Mux16(a=t2, b=false, sel=reset, out=regin);

    Register(in=regin, load=superload, out=out, out=regout);

    Inc16(in=regout, out=incout);


    // this code works for reset and load inputs

    // Or(a=reset, b=load, out=resetOrload);

    // Mux16(a=in, b=false, sel=reset, out=inorzero);

    // Register(in=inorzero, load=resetOrload, out=out, out=regout);

    // Inc16(in=regout, out=incout);
 
}
